---
layout: post
title: "JPQL functions cheat sheet"
date: 2025-08-21 01:26:56
categories: java
description: JPQL functions cheat sheet
keywords: [Andrei Pall, blog, java, jpa, spring, framework]
excerpt: Here’s a concise JPQL functions cheat sheet with examples you can use directly in your queries
---
<p data-start="0" data-end="99">Here’s a concise <strong data-start="17" data-end="47">JPQL functions cheat sheet</strong> with examples you can use directly in your queries:</p>
<hr data-start="101" data-end="104">
<h2 data-start="106" data-end="132"><strong data-start="109" data-end="132">1. String Functions</strong></h2>
<div class="_tableContainer_80l1q_1"><div tabindex="-1" class="_tableWrapper_80l1q_14 group flex w-fit flex-col-reverse"><table data-start="134" data-end="736" class="w-fit min-w-(--thread-content-width)"><thead data-start="134" data-end="170"><tr data-start="134" data-end="170"><th data-start="134" data-end="145" data-col-size="sm">Function</th><th data-start="145" data-end="159" data-col-size="sm">Description</th><th data-start="159" data-end="170" data-col-size="md">Example</th></tr></thead><tbody data-start="208" data-end="736"><tr data-start="208" data-end="324"><td data-start="208" data-end="236" data-col-size="sm"><code data-start="210" data-end="235">CONCAT(str1, str2, ...)</code></td><td data-start="236" data-end="259" data-col-size="sm">Concatenates strings</td><td data-col-size="md" data-start="259" data-end="324"><code data-start="261" data-end="322">SELECT CONCAT(e.firstName, ' ', e.lastName) FROM Employee e</code></td></tr><tr data-start="325" data-end="409"><td data-start="325" data-end="359" data-col-size="sm"><code data-start="327" data-end="358">SUBSTRING(str, start, length)</code></td><td data-col-size="sm" data-start="359" data-end="380">Extracts substring</td><td data-col-size="md" data-start="380" data-end="409"><code data-start="382" data-end="407">SUBSTRING(e.name, 1, 3)</code></td></tr><tr data-start="410" data-end="476"><td data-start="410" data-end="424" data-col-size="sm"><code data-start="412" data-end="423">TRIM(str)</code></td><td data-col-size="sm" data-start="424" data-end="458">Removes leading/trailing spaces</td><td data-col-size="md" data-start="458" data-end="476"><code data-start="460" data-end="474">TRIM(e.name)</code></td></tr><tr data-start="477" data-end="535"><td data-start="477" data-end="492" data-col-size="sm"><code data-start="479" data-end="491">LOWER(str)</code></td><td data-col-size="sm" data-start="492" data-end="516">Converts to lowercase</td><td data-col-size="md" data-start="516" data-end="535"><code data-start="518" data-end="533">LOWER(e.name)</code></td></tr><tr data-start="536" data-end="594"><td data-start="536" data-end="551" data-col-size="sm"><code data-start="538" data-end="550">UPPER(str)</code></td><td data-start="551" data-end="575" data-col-size="sm">Converts to uppercase</td><td data-col-size="md" data-start="575" data-end="594"><code data-start="577" data-end="592">UPPER(e.name)</code></td></tr><tr data-start="595" data-end="658"><td data-start="595" data-end="611" data-col-size="sm"><code data-start="597" data-end="610">LENGTH(str)</code></td><td data-col-size="sm" data-start="611" data-end="638">Returns length of string</td><td data-col-size="md" data-start="638" data-end="658"><code data-start="640" data-end="656">LENGTH(e.name)</code></td></tr><tr data-start="659" data-end="736"><td data-start="659" data-end="683" data-col-size="sm"><code data-start="661" data-end="682">LOCATE(substr, str)</code></td><td data-start="683" data-end="707" data-col-size="sm">Position of substring</td><td data-col-size="md" data-start="707" data-end="736"><code data-start="709" data-end="734">LOCATE('Smith', e.name)</code></td></tr></tbody></table><div class="sticky end-(--thread-content-margin) h-0 self-end select-none"><div class="absolute end-0 flex items-end" style="height: 32.8px;"><span class="" data-state="closed"></span></div></div></div></div>
<hr data-start="738" data-end="741">
<h2 data-start="743" data-end="783"><strong data-start="746" data-end="783">2. Numeric / Arithmetic Functions</strong></h2>
<div class="_tableContainer_80l1q_1"><div tabindex="-1" class="_tableWrapper_80l1q_14 group flex w-fit flex-col-reverse"><table data-start="785" data-end="1105" class="w-fit min-w-(--thread-content-width)"><thead data-start="785" data-end="821"><tr data-start="785" data-end="821"><th data-start="785" data-end="796" data-col-size="sm">Function</th><th data-start="796" data-end="810" data-col-size="sm">Description</th><th data-start="810" data-end="821" data-col-size="sm">Example</th></tr></thead><tbody data-start="859" data-end="1105"><tr data-start="859" data-end="911"><td data-start="859" data-end="875" data-col-size="sm"><code data-start="861" data-end="874">ABS(number)</code></td><td data-col-size="sm" data-start="875" data-end="892">Absolute value</td><td data-col-size="sm" data-start="892" data-end="911"><code data-start="894" data-end="909">ABS(e.salary)</code></td></tr><tr data-start="912" data-end="963"><td data-start="912" data-end="929" data-col-size="sm"><code data-start="914" data-end="928">SQRT(number)</code></td><td data-col-size="sm" data-start="929" data-end="943">Square root</td><td data-col-size="sm" data-start="943" data-end="963"><code data-start="945" data-end="961">SQRT(e.salary)</code></td></tr><tr data-start="964" data-end="1024"><td data-start="964" data-end="989" data-col-size="sm"><code data-start="966" data-end="988">MOD(number, divisor)</code></td><td data-col-size="sm" data-start="989" data-end="999">Modulus</td><td data-col-size="sm" data-start="999" data-end="1024"><code data-start="1001" data-end="1022">MOD(e.salary, 1000)</code></td></tr><tr data-start="1025" data-end="1105"><td data-start="1025" data-end="1046" data-col-size="sm"><code data-start="1027" data-end="1045">SIZE(collection)</code></td><td data-start="1046" data-end="1083" data-col-size="sm">Number of elements in a collection</td><td data-col-size="sm" data-start="1083" data-end="1105"><code data-start="1085" data-end="1103">SIZE(e.projects)</code></td></tr></tbody></table><div class="sticky end-(--thread-content-margin) h-0 self-end select-none"><div class="absolute end-0 flex items-end" style="height: 32.8px;"><span class="" data-state="closed"></span></div></div></div></div>
<hr data-start="1107" data-end="1110">
<h2 data-start="1112" data-end="1143"><strong data-start="1115" data-end="1143">3. Date / Time Functions</strong></h2>
<div class="_tableContainer_80l1q_1"><div tabindex="-1" class="_tableWrapper_80l1q_14 group flex w-fit flex-col-reverse"><table data-start="1145" data-end="1409" class="w-fit min-w-(--thread-content-width)"><thead data-start="1145" data-end="1181"><tr data-start="1145" data-end="1181"><th data-start="1145" data-end="1156" data-col-size="sm">Function</th><th data-start="1156" data-end="1170" data-col-size="sm">Description</th><th data-start="1170" data-end="1181" data-col-size="sm">Example</th></tr></thead><tbody data-start="1219" data-end="1409"><tr data-start="1219" data-end="1288"><td data-start="1219" data-end="1236" data-col-size="sm"><code data-start="1221" data-end="1235">CURRENT_DATE</code></td><td data-col-size="sm" data-start="1236" data-end="1251">Current date</td><td data-col-size="sm" data-start="1251" data-end="1288"><code data-start="1253" data-end="1286">WHERE e.hireDate = CURRENT_DATE</code></td></tr><tr data-start="1289" data-end="1339"><td data-start="1289" data-end="1306" data-col-size="sm"><code data-start="1291" data-end="1305">CURRENT_TIME</code></td><td data-col-size="sm" data-start="1306" data-end="1321">Current time</td><td data-col-size="sm" data-start="1321" data-end="1339"><code data-start="1323" data-end="1337">CURRENT_TIME</code></td></tr><tr data-start="1340" data-end="1409"><td data-start="1340" data-end="1362" data-col-size="sm"><code data-start="1342" data-end="1361">CURRENT_TIMESTAMP</code></td><td data-col-size="sm" data-start="1362" data-end="1386">Current date and time</td><td data-col-size="sm" data-start="1386" data-end="1409"><code data-start="1388" data-end="1407">CURRENT_TIMESTAMP</code></td></tr></tbody></table><div class="sticky end-(--thread-content-margin) h-0 self-end select-none"><div class="absolute end-0 flex items-end" style="height: 32.8px;"><span class="" data-state="closed"></span></div></div></div></div>
<hr data-start="1411" data-end="1414">
<h2 data-start="1416" data-end="1445"><strong data-start="1419" data-end="1445">4. Aggregate Functions</strong></h2>
<div class="_tableContainer_80l1q_1"><div tabindex="-1" class="_tableWrapper_80l1q_14 group flex w-fit flex-col-reverse"><table data-start="1447" data-end="1779" class="w-fit min-w-(--thread-content-width)"><thead data-start="1447" data-end="1483"><tr data-start="1447" data-end="1483"><th data-start="1447" data-end="1458" data-col-size="sm">Function</th><th data-start="1458" data-end="1472" data-col-size="sm">Description</th><th data-start="1472" data-end="1483" data-col-size="sm">Example</th></tr></thead><tbody data-start="1521" data-end="1779"><tr data-start="1521" data-end="1572"><td data-start="1521" data-end="1537" data-col-size="sm"><code data-start="1523" data-end="1536">COUNT(expr)</code></td><td data-col-size="sm" data-start="1537" data-end="1558">Number of elements</td><td data-col-size="sm" data-start="1558" data-end="1572"><code data-start="1560" data-end="1570">COUNT(e)</code></td></tr><tr data-start="1573" data-end="1629"><td data-start="1573" data-end="1587" data-col-size="sm"><code data-start="1575" data-end="1586">SUM(expr)</code></td><td data-col-size="sm" data-start="1587" data-end="1610">Sum of numeric field</td><td data-col-size="sm" data-start="1610" data-end="1629"><code data-start="1612" data-end="1627">SUM(e.salary)</code></td></tr><tr data-start="1630" data-end="1679"><td data-start="1630" data-end="1644" data-col-size="sm"><code data-start="1632" data-end="1643">AVG(expr)</code></td><td data-col-size="sm" data-start="1644" data-end="1660">Average value</td><td data-col-size="sm" data-start="1660" data-end="1679"><code data-start="1662" data-end="1677">AVG(e.salary)</code></td></tr><tr data-start="1680" data-end="1729"><td data-start="1680" data-end="1694" data-col-size="sm"><code data-start="1682" data-end="1693">MIN(expr)</code></td><td data-col-size="sm" data-start="1694" data-end="1710">Minimum value</td><td data-col-size="sm" data-start="1710" data-end="1729"><code data-start="1712" data-end="1727">MIN(e.salary)</code></td></tr><tr data-start="1730" data-end="1779"><td data-start="1730" data-end="1744" data-col-size="sm"><code data-start="1732" data-end="1743">MAX(expr)</code></td><td data-col-size="sm" data-start="1744" data-end="1760">Maximum value</td><td data-col-size="sm" data-start="1760" data-end="1779"><code data-start="1762" data-end="1777">MAX(e.salary)</code></td></tr></tbody></table><div class="sticky end-(--thread-content-margin) h-0 self-end select-none"><div class="absolute end-0 flex items-end" style="height: 32.8px;"><span class="" data-state="closed"></span></div></div></div></div>
<hr data-start="1781" data-end="1784">
<h2 data-start="1786" data-end="1827"><strong data-start="1789" data-end="1827">5. Conditional / Boolean Functions</strong></h2>
<ul data-start="1829" data-end="1900">
<li data-start="1829" data-end="1897">
<p data-start="1831" data-end="1897"><code data-start="1831" data-end="1868">CASE WHEN ... THEN ... ELSE ... END</code> for conditional expressions.</p>
</li>
</ul>
<pre class="overflow-visible!" data-start="1901" data-end="2002"><div class="contain-inline-size rounded-2xl relative bg-token-sidebar-surface-primary"><div class="flex items-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-between h-9 bg-token-sidebar-surface-primary select-none rounded-t-2xl">sql</div><div class="sticky top-9"><div class="absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class="bg-token-bg-elevated-secondary text-token-text-secondary flex items-center gap-4 rounded-sm px-2 font-sans text-xs"><span class="" data-state="closed"></span></div></div></div><div class="overflow-y-auto p-4" dir="ltr"><code class="whitespace-pre! language-sql"><span><span><span class="hljs-keyword">SELECT</span></span><span> e.name,
       </span><span><span class="hljs-keyword">CASE</span></span><span> </span><span><span class="hljs-keyword">WHEN</span></span><span> e.salary </span><span><span class="hljs-operator">&gt;</span></span><span> </span><span><span class="hljs-number">5000</span></span><span> </span><span><span class="hljs-keyword">THEN</span></span><span> </span><span><span class="hljs-string">'High'</span></span><span> </span><span><span class="hljs-keyword">ELSE</span></span><span> </span><span><span class="hljs-string">'Low'</span></span><span> </span><span><span class="hljs-keyword">END</span></span><span>
</span><span><span class="hljs-keyword">FROM</span></span><span> Employee e
</span></span></code></div></div></pre>
<hr data-start="2004" data-end="2007">
<h2 data-start="2009" data-end="2052"><strong data-start="2012" data-end="2052">6. Using Database-Specific Functions</strong></h2>
<p data-start="2054" data-end="2095">If your JPA provider supports <code data-start="2084" data-end="2094">FUNCTION</code>:</p>
<pre class="overflow-visible!" data-start="2097" data-end="2218"><div class="contain-inline-size rounded-2xl relative bg-token-sidebar-surface-primary"><div class="flex items-center text-token-text-secondary px-4 py-2 text-xs font-sans justify-between h-9 bg-token-sidebar-surface-primary select-none rounded-t-2xl">java</div><div class="sticky top-9"><div class="absolute end-0 bottom-0 flex h-9 items-center pe-2"><div class="bg-token-bg-elevated-secondary text-token-text-secondary flex items-center gap-4 rounded-sm px-2 font-sans text-xs"><span class="" data-state="closed"></span></div></div></div><div class="overflow-y-auto p-4" dir="ltr"><code class="whitespace-pre! language-java"><span><span>SELECT </span><span><span class="hljs-title function_">FUNCTION</span></span><span><span class="hljs-params">(<span class="hljs-string">'DATE_FORMAT'</span></span></span><span>, e.hireDate, </span><span><span class="hljs-string">'%Y-%m-%d'</span></span><span>) FROM Employee e
SELECT </span><span><span class="hljs-title function_">FUNCTION</span></span><span><span class="hljs-params">(<span class="hljs-string">'NOW'</span></span></span><span>) FROM Employee e
</span></span></code></div></div></pre>
<p data-start="2220" data-end="2330">This lets you access functions not natively supported in JPQL (like <code data-start="2288" data-end="2306">window functions</code>, <code data-start="2308" data-end="2322">GROUP_CONCAT</code>, etc.).</p>
